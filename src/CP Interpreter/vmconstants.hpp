#ifndef VMCONSTANTS_HPP
#define VMCONSTANTS_HPP

#include <cstdint>

//#include "types.hpp"

enum OpCode : int16_t {
	OP_RES,
	// value ops
	OP_POP,
	OP_PUSH_UNDEFINED,
	OP_PUSH_VOID,
	OP_PUSH_BOOL,
	OP_PUSH_INT,
	OP_PUSH_FLOAT,
	OP_PUSH_CHAR,
	OP_PUSH_STRING,
	OP_PUSH_FUNCTION,
	OP_CREATE_ARRAY,
	OP_SET_ELEMENT,
	OP_CREATE_STRUCT,
	OP_SET_FIELD,
	// struct type ops
	OP_STRUCT_START,
	OP_STRUCT_SET_VAR,
	OP_STRUCT_END,
	// type ops
	OP_SET_TYPE,
	OP_SET_TYPE_NAME,
	OP_SET_NAME_SPACE,
	OP_SET_ARRAY_DIM,
	OP_SET_ARRAY_SIZE,
	// variable ops
	OP_SET_VAR_USE_REF,
	OP_LOAD_VAR,
	OP_STORE_VAR,
	OP_ASSIGN_VAR,
	OP_LOAD_SUB_ID,
	OP_LOAD_SUB_IX,
	OP_ASSIGN_SUB,
	// function ops
	OP_FUN_START,
	OP_FUN_PARAM_END,
	OP_FUN_END,
	OP_CALL,
	OP_RETURN,
	// coditional
	OP_CONTINUE,
	OP_BREAK,
	OP_TRY_START,
	OP_TRY_END,
	OP_THROW,
	OP_GET_ITERATOR,
	OP_NEXT_ELEMENT,
	OP_JUMP,
	OP_JUMP_IF_FALSE,
	OP_JUMP_IF_FALSE_OR_NEXT,
	OP_JUMP_IF_TRUE,
	// expression ops
	OP_IS_TYPE,
	OP_REFID,
	OP_TYPEID,
	OP_TYPEOF,
	OP_TYPE_PARSE,
	OP_TERNARY,
	OP_IN,
	OP_OR,
	OP_AND,
	OP_BIT_OR,
	OP_BIT_XOR,
	OP_BIT_AND,
	OP_EQL,
	OP_DIF,
	OP_LT,
	OP_LTE,
	OP_GT,
	OP_GTE,
	OP_SPACE_SHIP,
	OP_LEFT_SHIFT,
	OP_RIGHT_SHIFT,
	OP_ADD,
	OP_SUB,
	OP_MUL,
	OP_DIV,
	OP_REMAINDER,
	OP_FLOOR_DIV,
	OP_NOT,
	OP_BIT_NOT,
	OP_EXP,
	OP_REF,
	OP_UNREF,
	OP_TRAP,
	OP_HALT
};

#endif // !VMCONSTANTS_HPP
